// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 * Works. tested.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load,sel=address,a=ra,b=rb,c=rc,d=rd,e=re,f=rf,g=rg,h=rh);
	
	Register(in=in,load=ra,out=ra1);
	Register(in=in,load=rb,out=rb1);
	Register(in=in,load=rc,out=rc1);
	Register(in=in,load=rd,out=rd1);
	Register(in=in,load=re,out=re1);
	Register(in=in,load=rf,out=rf1);
	Register(in=in,load=rg,out=rg1);
	Register(in=in,load=rh,out=rh1);

	Mux8Way16(a=ra1,b=rb1,c=rc1,d=rd1,e=re1,f=rf1,g=rg1,h=rh1,sel=address,out=out);

}

